namespace Project.App;

use Runtime.Entity.Hook;
use Runtime.ORM.Annotations.Database;
use Runtime.ORM.Factory.MySQLFactory;
use Runtime.Web.Annotations.Api;
use Runtime.Web.Annotations.Components;
use Runtime.Web.Annotations.FooterComponents;
use Runtime.Web.Annotations.PageNotFound;
use Runtime.Web.Annotations.Route;
use Runtime.Web.Annotations.Widget;


class ModuleDescription
{
	pure string getModuleName() => "Project.App";
	pure string getModuleVersion() => "0.0.1";
	pure Dict<string> requiredModules() =>
	{
		"Runtime.Web": "*",
		"Runtime.Widget": "*",
		#ifdef BACKEND then
		"Runtime.ORM": "*",
		#endif
	};
	pure Collection<Dict> entities() =>
	[
		#ifdef BACKEND then
		
		/* Backend */
		new Api("Project.App.Backend.Api.FormApi"),
		new Database("Project.App.Backend.Database.Schema"),
		new MySQLFactory({
			"name": "default",
			"host": @.env("MYSQL_HOST"),
			"login": @.env("MYSQL_LOGIN"),
			"password": @.env("MYSQL_PASSWORD"),
			"database": @.env("MYSQL_DATABASE"),
		}),
		
		/* Frontend */
		new FooterComponents([
			"Project.App.Frontend.Components.Blocks.Scripts",
		]),
		new PageNotFound("Project.App.Frontend.Components.NotFoundPage.NotFoundPageModel"),
		new Route("Project.App.Frontend.Routes"),
		
		#endif
		
		new Components(["Project.App.Components.Blocks.CSS"]),
		new Widget("Project.App.Frontend.Components.IndexPage.IndexPageModel"),
		new Widget("Project.App.Frontend.Components.NotFoundPage.NotFoundPageModel"),
	];
}